# This directive describes a set of servers, which can be used in directives proxy_pass and fastcgi_pass as a single entity. They can listen to server on different ports and furthermore, it is possible to simultaneously use a server that listens on both TCP and Unix sockets.
# Review http://wiki.nginx.org/HttpUpstreamModule for more Documentation
  upstream upstream_sproutvideossl {
  server unix:/var/run/engineyard/unicorn_sproutvideo.sock fail_timeout=0;
}

# Directive assigns configuration for the virtual server.
server {
# The listen directive specifies the address and port accepted by the enclosing server {...} block. It is possible to specify only an address, only a port, or a server name as the address.
  listen 444;

  #
  # Server Names
  #
  # This is the list of IP's and/or domain names with any wildcards or
  # subdomains. The special value '_' is used to match all domains and IPs and
  # generally denotes the default server for the entire Nginx process.
  #
  # Note that if you specify any domains with wild cards, the very first domain
  # listed must be without a wild card. For example:
  #
  # server_name www.mydomain.org *.mydomain.org;
  #
  # It is good practice to include wildcard subdomains so that Nginx will not
  # require a restart when new services are added for an application.
  #
  server_name _;

  #
  # SSL certificates
  #
  # Be sure that the directory and files are owned by and/or readable by the
  # Nginx user. Additionally, it is recommended that you do not use signed
  # certificates. The justification for this reocommendation is that in order to
  # start up the Nginx server the password will need to be typed in every time.
  # This precludes automatic/automated web server restarts on boot or otherwise.
  #
  ssl on;
  ssl_certificate /data/nginx/ssl/sproutvideo.crt;
  ssl_certificate_key /data/nginx/ssl/sproutvideo.key;
  ssl_protocols SSLv3 TLSv1;
  ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM;
  ssl_prefer_server_ciphers on;

  #
  # The application root which is inherited for all location blocks below.
  #
  root /data/sproutvideo/current/public;

  access_log /var/log/engineyard/nginx/sproutvideo.access.ssl.log main;

  error_log /var/log/engineyard/nginx/sproutvideo.error.log notice;
  # error_log /dev/null notice;

  include /etc/nginx/common/servers.conf;

  # Location for the Upstream (a/k/a Unicorn or Mongrel)
  location @app_sproutvideossl {
    include /etc/nginx/common/proxy.conf;
    proxy_set_header        X-Forwarded-Proto https;
    proxy_pass http://upstream_sproutvideossl;
  }

  location = /system/maintenance.html { }

  # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
  location ~ ^/(images|assets|javascripts|stylesheets)/ {
  try_files  $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_sproutvideossl;
  expires 10y;
  }
  location /v1/videos {
    include /etc/nginx/common/proxy.conf;
    proxy_set_header  X-Forwarded-Proto https;
    if ($request_method = GET) {
      proxy_pass http://upstream_sproutvideossl;
      break;
    }
    if ($content_type !~ ^multipart/form-data(.*)$) {
      proxy_pass http://upstream_sproutvideossl;
      break;
    }
    upload_pass @app_sproutvideossl;
    upload_store /mnt/uploads;
    upload_store_access user:rw group:rw all:r;
    upload_set_form_field source_video[original_name] "$upload_file_name";
    upload_set_form_field source_video[content_type] "$upload_content_type";
    upload_set_form_field source_video[filepath] "$upload_tmp_path";
    upload_pass_form_field "^.*$";
    upload_cleanup 400 404 413 415 499 500-505;
  }

  location / {
  if (-f $document_root/system/maintenance.html) { return 503; }
    # auth is disabled for this server
    # auth_basic            "Restricted";
    # auth_basic_user_file  /etc/nginx/servers/sproutvideo.users;
  try_files  $uri $uri/index.html $uri.html @app_sproutvideossl;
  }

  location = /500.html {
     root /data/sproutvideo/current/public;
  }
  include /etc/nginx/servers/sproutvideo/custom.ssl.conf;
}